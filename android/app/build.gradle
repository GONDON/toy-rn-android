plugins {
    id 'com.android.application'
    id "org.jetbrains.kotlin.android"
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'com.facebook.react'
}
/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}
/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false
/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace 'com.talenpal.talenpalapp'

    defaultConfig {
        applicationId "com.talenpal.talenpalapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }
    //SHA1: 37:2A:02:F7:4D:E2:AE:33:DA:0E:B8:70:06:5C:A8:43:1E:5A:FB:85
    //SHA256: 28:E4:2B:6A:B6:40:9C:A5:AF:83:25:A3:31:BC:58:13:04:46:A0:73:30:5A:B3:8D:19:0F:48:29:F2:DC:A5:26

    /** 配置签名文件 **/
    signingConfigs {
        release {
            storeFile file("../app/talenpal.jks")
            storePassword "talenpal@2025#x1"
            keyAlias "talenpal"
            keyPassword "talenpal@2025#x1"
        }

        debug {
            storeFile file("../app/talenpal.jks")
            storePassword "talenpal@2025#x1"
            keyAlias "talenpal"
            keyPassword "talenpal@2025#x1"
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def isRelease = variant.buildType.name.contains('release')
            def fileName = "talenpal.apk"
            // 获取构建开始的时间
            def buildStartTime = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))

            if (isRelease) {
                fileName = "talenpal_release_v${defaultConfig.versionName}_${buildStartTime}.apk"
            } else {
                fileName = "talenpal_debug_v${defaultConfig.versionName}_${buildStartTime}.apk"
            }
            outputFileName = fileName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        compose = true
        viewBinding true
    }

    // 显式配置所有Kotlin任务
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "17"
            apiVersion = "1.8"
            languageVersion = "1.8"
        }
    }

    packagingOptions {
        pickFirst 'lib/*/libc++_shared.so' // 多个 AAR（Android Library）文件中存在此 .so 文件，请选择第一个
    }
}

configurations.all {
    exclude group: "com.thingclips.smart", module: 'thingsmart-modularCampAnno'
}

dependencies {
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("androidx.core:core-ktx:1.9.0")
    implementation(platform("androidx.compose:compose-bom:2023.06.01"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.material3:material3")

    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'org.xutils:xutils:3.3.36'

    implementation 'com.alibaba:fastjson:1.1.67.android'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.14.9'

    // App SDK 最新稳定安卓版 涂鸦
    implementation 'com.facebook.soloader:soloader:0.10.4+'
    implementation 'com.thingclips.smart:thingsmart:6.4.0'

    // Glide（加载图片）
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    kapt 'com.github.bumptech.glide:compiler:4.16.0'
    //轮播图
    implementation 'io.github.youth5201314:banner:2.2.3'

    //沉浸式状态栏
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    // kotlin扩展
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    //验证码显示
    implementation 'com.chaos.view:pinview:1.4.4'
    //eventbus 事件分发
    implementation 'org.greenrobot:eventbus:3.1.1'
    //倒计时
    implementation 'in.xiandan:count-down-timer:1.0.3'
    //tab
    implementation'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //XPopup
    implementation 'com.github.li-xiaojun:XPopup:2.10.0'
    //下拉刷新
    implementation  'io.github.scwang90:refresh-layout-kernel:3.0.0-alpha'
    implementation  'io.github.scwang90:refresh-footer-classics:3.0.0-alpha'
    //骨骼屏
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    //react-native
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
